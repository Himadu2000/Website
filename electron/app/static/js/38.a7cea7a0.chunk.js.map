{"version":3,"sources":["../node_modules/@ionic/core/dist/esm/legacy/ion-input-ios.entry.js","../node_modules/@ionic/core/dist/esm/legacy/chunk-9d21e8e5.js","../node_modules/@ionic/core/dist/esm/legacy/chunk-d102c9d1.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Input","tslib__WEBPACK_IMPORTED_MODULE_0__","_chunk_f257aad1_js__WEBPACK_IMPORTED_MODULE_1__","_chunk_9d21e8e5_js__WEBPACK_IMPORTED_MODULE_3__","_chunk_d102c9d1_js__WEBPACK_IMPORTED_MODULE_4__","hostRef","_this","this","Object","inputId","inputIds","didBlurAfterEdit","hasFocus","autocapitalize","autocomplete","autocorrect","autofocus","clearInput","debounce","disabled","name","readonly","required","spellcheck","type","value","onInput","ev","input","target","ionInput","emit","onBlur","focusChanged","emitStyle","ionBlur","onFocus","ionFocus","onKeydown","clearOnEdit","hasValue","clearTextInput","preventDefault","stopPropagation","nativeInput","ionChange","ionInputDidLoad","ionInputDidUnload","ionStyle","prototype","debounceChanged","disabledChanged","valueChanged","componentWillLoad","undefined","componentDidLoad","componentDidUnload","setFocus","_a","focus","getInputElement","Promise","resolve","getValue","interactive","has-placeholder","placeholder","has-value","has-focus","interactive-disabled","length","hostData","mode","aria-disabled","class","assign","color","__stencil_render","labelId","label","el","id","ref","aria-labelledby","accept","autoCapitalize","autoComplete","autoCorrect","autoFocus","inputMode","inputmode","min","max","minLength","minlength","maxLength","maxlength","multiple","pattern","readOnly","spellCheck","step","size","onKeyDown","tabindex","onTouchStart","onMouseDown","defineProperty","get","enumerable","configurable","render","createColorClasses","getClassMap","hostContext","openURL","selector","closest","ion-color","classes","map","Array","isArray","split","filter","c","trim","getClassList","forEach","SCHEME","url","direction","router","test","document","querySelector","componentOnReady","sent","push","rIC","callback","window","requestIdleCallback","setTimeout","hasShadowDom","shadowRoot","attachShadow","findItemLabel","componentEl","itemEl","renderHiddenInput","always","container","ownerDocument","createElement","classList","add","appendChild","clamp","n","Math","assert","actual","reason","message","console","error","Error","now","timeStamp","Date","pointerCoord","changedTouches","touch","x","clientX","y","clientY","pageX","pageY","isEndSide","side","isRTL","dir","debounceEvent","event","wait","original","_original","bind","func","timer","args","_i","arguments","clearTimeout","apply","concat"],"mappings":"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","file":"static/js/38.a7cea7a0.chunk.js","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { r as registerInstance, c as createEvent, d as getIonMode, h, e as getElement, H as Host } from './chunk-f257aad1.js';\nimport './chunk-1074393c.js';\nimport { c as createColorClasses } from './chunk-9d21e8e5.js';\nimport { d as debounceEvent, f as findItemLabel } from './chunk-d102c9d1.js';\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\n\nvar Input =\n/** @class */\nfunction () {\n  function Input(hostRef) {\n    var _this = this;\n\n    registerInstance(this, hostRef);\n    this.inputId = \"ion-input-\" + inputIds++;\n    this.didBlurAfterEdit = false;\n    this.hasFocus = false;\n    /**\n     * Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\n     */\n\n    this.autocapitalize = 'off';\n    /**\n     * Indicates whether the value of the control can be automatically completed by the browser.\n     */\n\n    this.autocomplete = 'off';\n    /**\n     * Whether auto correction should be enabled when the user is entering/editing the text value.\n     */\n\n    this.autocorrect = 'off';\n    /**\n     * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\n     */\n\n    this.autofocus = false;\n    /**\n     * If `true`, a clear icon will appear in the input when there is a value. Clicking it clears the input.\n     */\n\n    this.clearInput = false;\n    /**\n     * Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke.\n     */\n\n    this.debounce = 0;\n    /**\n     * If `true`, the user cannot interact with the input.\n     */\n\n    this.disabled = false;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n\n    this.name = this.inputId;\n    /**\n     * If `true`, the user cannot modify the value.\n     */\n\n    this.readonly = false;\n    /**\n     * If `true`, the user must fill in a value before submitting a form.\n     */\n\n    this.required = false;\n    /**\n     * If `true`, the element will have its spelling and grammar checked.\n     */\n\n    this.spellcheck = false;\n    /**\n     * The type of control to display. The default type is text.\n     */\n\n    this.type = 'text';\n    /**\n     * The value of the input.\n     */\n\n    this.value = '';\n\n    this.onInput = function (ev) {\n      var input = ev.target;\n\n      if (input) {\n        _this.value = input.value || '';\n      }\n\n      _this.ionInput.emit(ev);\n    };\n\n    this.onBlur = function () {\n      _this.hasFocus = false;\n\n      _this.focusChanged();\n\n      _this.emitStyle();\n\n      _this.ionBlur.emit();\n    };\n\n    this.onFocus = function () {\n      _this.hasFocus = true;\n\n      _this.focusChanged();\n\n      _this.emitStyle();\n\n      _this.ionFocus.emit();\n    };\n\n    this.onKeydown = function () {\n      if (_this.clearOnEdit) {\n        // Did the input value change after it was blurred and edited?\n        if (_this.didBlurAfterEdit && _this.hasValue()) {\n          // Clear the input\n          _this.clearTextInput();\n        } // Reset the flag\n\n\n        _this.didBlurAfterEdit = false;\n      }\n    };\n\n    this.clearTextInput = function (ev) {\n      if (_this.clearInput && !_this.readonly && !_this.disabled && ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n      }\n\n      _this.value = '';\n      /**\n       * This is needed for clearOnEdit\n       * Otherwise the value will not be cleared\n       * if user is inside the input\n       */\n\n      if (_this.nativeInput) {\n        _this.nativeInput.value = '';\n      }\n    };\n\n    this.ionInput = createEvent(this, \"ionInput\", 7);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionInputDidLoad = createEvent(this, \"ionInputDidLoad\", 7);\n    this.ionInputDidUnload = createEvent(this, \"ionInputDidUnload\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n  }\n\n  Input.prototype.debounceChanged = function () {\n    this.ionChange = debounceEvent(this.ionChange, this.debounce);\n  };\n\n  Input.prototype.disabledChanged = function () {\n    this.emitStyle();\n  };\n  /**\n   * Update the native input element when the value changes\n   */\n\n\n  Input.prototype.valueChanged = function () {\n    this.emitStyle();\n    this.ionChange.emit({\n      value: this.value\n    });\n  };\n\n  Input.prototype.componentWillLoad = function () {\n    // By default, password inputs clear after focus when they have content\n    if (this.clearOnEdit === undefined && this.type === 'password') {\n      this.clearOnEdit = true;\n    }\n\n    this.emitStyle();\n  };\n\n  Input.prototype.componentDidLoad = function () {\n    this.debounceChanged();\n    this.ionInputDidLoad.emit();\n  };\n\n  Input.prototype.componentDidUnload = function () {\n    this.ionInputDidUnload.emit();\n  };\n  /**\n   * Sets focus on the specified `ion-input`. Use this method instead of the global\n   * `input.focus()`.\n   */\n\n\n  Input.prototype.setFocus = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      return tslib_1.__generator(this, function (_a) {\n        if (this.nativeInput) {\n          this.nativeInput.focus();\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n  /**\n   * Returns the native `<input>` element used under the hood.\n   */\n\n\n  Input.prototype.getInputElement = function () {\n    return Promise.resolve(this.nativeInput);\n  };\n\n  Input.prototype.getValue = function () {\n    return this.value || '';\n  };\n\n  Input.prototype.emitStyle = function () {\n    this.ionStyle.emit({\n      'interactive': true,\n      'input': true,\n      'has-placeholder': this.placeholder != null,\n      'has-value': this.hasValue(),\n      'has-focus': this.hasFocus,\n      'interactive-disabled': this.disabled\n    });\n  };\n\n  Input.prototype.focusChanged = function () {\n    // If clearOnEdit is enabled and the input blurred but has a value, set a flag\n    if (this.clearOnEdit && !this.hasFocus && this.hasValue()) {\n      this.didBlurAfterEdit = true;\n    }\n  };\n\n  Input.prototype.hasValue = function () {\n    return this.getValue().length > 0;\n  };\n\n  Input.prototype.hostData = function () {\n    var _a;\n\n    var mode = getIonMode(this);\n    return {\n      'aria-disabled': this.disabled ? 'true' : null,\n      class: Object.assign({}, createColorClasses(this.color), (_a = {}, _a[mode] = true, _a['has-value'] = this.hasValue(), _a['has-focus'] = this.hasFocus, _a))\n    };\n  };\n\n  Input.prototype.__stencil_render = function () {\n    var _this = this;\n\n    var value = this.getValue();\n    var labelId = this.inputId + '-lbl';\n    var label = findItemLabel(this.el);\n\n    if (label) {\n      label.id = labelId;\n    }\n\n    return [h(\"input\", {\n      class: \"native-input\",\n      ref: function ref(input) {\n        return _this.nativeInput = input;\n      },\n      \"aria-labelledby\": labelId,\n      disabled: this.disabled,\n      accept: this.accept,\n      autoCapitalize: this.autocapitalize,\n      autoComplete: this.autocomplete,\n      autoCorrect: this.autocorrect,\n      autoFocus: this.autofocus,\n      inputMode: this.inputmode,\n      min: this.min,\n      max: this.max,\n      minLength: this.minlength,\n      maxLength: this.maxlength,\n      multiple: this.multiple,\n      name: this.name,\n      pattern: this.pattern,\n      placeholder: this.placeholder || '',\n      readOnly: this.readonly,\n      required: this.required,\n      spellCheck: this.spellcheck,\n      step: this.step,\n      size: this.size,\n      type: this.type,\n      value: value,\n      onInput: this.onInput,\n      onBlur: this.onBlur,\n      onFocus: this.onFocus,\n      onKeyDown: this.onKeydown\n    }), this.clearInput && !this.readonly && !this.disabled && h(\"button\", {\n      type: \"button\",\n      class: \"input-clear-icon\",\n      tabindex: \"-1\",\n      onTouchStart: this.clearTextInput,\n      onMouseDown: this.clearTextInput\n    })];\n  };\n\n  Object.defineProperty(Input.prototype, \"el\", {\n    get: function get() {\n      return getElement(this);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Input, \"watchers\", {\n    get: function get() {\n      return {\n        \"debounce\": [\"debounceChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"value\": [\"valueChanged\"]\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Input.prototype.render = function () {\n    return h(Host, this.hostData(), this.__stencil_render());\n  };\n\n  Object.defineProperty(Input, \"style\", {\n    get: function get() {\n      return \".sc-ion-input-ios-h{--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--background:transparent;--color:initial;display:-ms-flexbox;display:flex;position:relative;-ms-flex:1;flex:1;-ms-flex-align:center;align-items:center;width:100%;padding:0!important;background:var(--background);color:var(--color);font-family:var(--ion-font-family,inherit);z-index:2}ion-item.sc-ion-input-ios-h:not(.item-label), ion-item:not(.item-label) .sc-ion-input-ios-h{--padding-start:0}.ion-color.sc-ion-input-ios-h{color:var(--ion-color-base)}.native-input.sc-ion-input-ios{border-radius:var(--border-radius);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:inline-block;-ms-flex:1;flex:1;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none;-moz-appearance:none;appearance:none}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.native-input.sc-ion-input-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-input.sc-ion-input-ios::-webkit-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::-moz-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios:-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios:-webkit-autofill{background-color:transparent}.native-input.sc-ion-input-ios:invalid{-webkit-box-shadow:none;box-shadow:none}.native-input.sc-ion-input-ios::-ms-clear{display:none}.native-input[disabled].sc-ion-input-ios{opacity:.4}.cloned-input.sc-ion-input-ios{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-input-ios-h .cloned-input.sc-ion-input-ios, [dir=rtl] .sc-ion-input-ios-h .cloned-input.sc-ion-input-ios, [dir=rtl].sc-ion-input-ios .cloned-input.sc-ion-input-ios{left:unset;right:unset;right:0}.input-clear-icon.sc-ion-input-ios{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;background-position:50%;border:0;outline:none;background-color:transparent;background-repeat:no-repeat;visibility:hidden;-webkit-appearance:none;-moz-appearance:none;appearance:none}.has-focus.has-value.sc-ion-input-ios-h .input-clear-icon.sc-ion-input-ios{visibility:visible}.has-focus.sc-ion-input-ios-h{pointer-events:none}.has-focus.sc-ion-input-ios-h a.sc-ion-input-ios, .has-focus.sc-ion-input-ios-h button.sc-ion-input-ios, .has-focus.sc-ion-input-ios-h input.sc-ion-input-ios{pointer-events:auto}.sc-ion-input-ios-h{--padding-top:10px;--padding-end:8px;--padding-bottom:10px;--padding-start:0;font-size:inherit}.item-label-floating.sc-ion-input-ios-h, .item-label-floating .sc-ion-input-ios-h, .item-label-stacked.sc-ion-input-ios-h, .item-label-stacked .sc-ion-input-ios-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0px}.input-clear-icon.sc-ion-input-ios{background-image:url(\\\"data:image/svg+xml;charset=utf-8,<svg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20viewBox=\\'0%200%20512%20512\\'><path%20fill=\\'var(--ion-color-step-600,%20%23666666)\\'%20d=\\'M403.1,108.9c-81.2-81.2-212.9-81.2-294.2,0s-81.2,212.9,0,294.2c81.2,81.2,212.9,81.2,294.2,0S484.3,190.1,403.1,108.9z%20M352,340.2L340.2,352l-84.4-84.2l-84,83.8L160,339.8l84-83.8l-84-83.8l11.8-11.8l84,83.8l84.4-84.2l11.8,11.8L267.6,256L352,340.2z\\'/></svg>\\\");width:30px;height:30px;background-size:18px}\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Input;\n}();\n\nvar inputIds = 0;\nexport { Input as ion_input };","import * as tslib_1 from \"tslib\";\n\nfunction hostContext(selector, el) {\n  return el.closest(selector) !== null;\n}\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\n\n\nfunction createColorClasses(color) {\n  var _a;\n\n  return typeof color === 'string' && color.length > 0 ? (_a = {\n    'ion-color': true\n  }, _a[\"ion-color-\" + color] = true, _a) : undefined;\n}\n\nfunction getClassList(classes) {\n  if (classes !== undefined) {\n    var array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array.filter(function (c) {\n      return c != null;\n    }).map(function (c) {\n      return c.trim();\n    }).filter(function (c) {\n      return c !== '';\n    });\n  }\n\n  return [];\n}\n\nfunction getClassMap(classes) {\n  var map = {};\n  getClassList(classes).forEach(function (c) {\n    return map[c] = true;\n  });\n  return map;\n}\n\nvar SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\n\nfunction openURL(url, ev, direction) {\n  return tslib_1.__awaiter(this, void 0, void 0, function () {\n    var router;\n    return tslib_1.__generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!(url != null && url[0] !== '#' && !SCHEME.test(url))) return [3\n          /*break*/\n          , 2];\n          router = document.querySelector('ion-router');\n          if (!router) return [3\n          /*break*/\n          , 2];\n\n          if (ev != null) {\n            ev.preventDefault();\n          }\n\n          return [4\n          /*yield*/\n          , router.componentOnReady()];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , router.push(url, direction)];\n\n        case 2:\n          return [2\n          /*return*/\n          , false];\n      }\n    });\n  });\n}\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };","function rIC(callback) {\n  if ('requestIdleCallback' in window) {\n    window.requestIdleCallback(callback);\n  } else {\n    setTimeout(callback, 32);\n  }\n}\n\nfunction hasShadowDom(el) {\n  return !!el.shadowRoot && !!el.attachShadow;\n}\n\nfunction findItemLabel(componentEl) {\n  var itemEl = componentEl.closest('ion-item');\n\n  if (itemEl) {\n    return itemEl.querySelector('ion-label');\n  }\n\n  return null;\n}\n\nfunction renderHiddenInput(always, container, name, value, disabled) {\n  if (always || hasShadowDom(container)) {\n    var input = container.querySelector('input.aux-input');\n\n    if (!input) {\n      input = container.ownerDocument.createElement('input');\n      input.type = 'hidden';\n      input.classList.add('aux-input');\n      container.appendChild(input);\n    }\n\n    input.disabled = disabled;\n    input.name = name;\n    input.value = value || '';\n  }\n}\n\nfunction clamp(min, n, max) {\n  return Math.max(min, Math.min(n, max));\n}\n\nfunction assert(actual, reason) {\n  if (!actual) {\n    var message = 'ASSERT: ' + reason;\n    console.error(message);\n    debugger; // tslint:disable-line\n\n    throw new Error(message);\n  }\n}\n\nfunction now(ev) {\n  return ev.timeStamp || Date.now();\n}\n\nfunction pointerCoord(ev) {\n  // get X coordinates for either a mouse click\n  // or a touch depending on the given event\n  if (ev) {\n    var changedTouches = ev.changedTouches;\n\n    if (changedTouches && changedTouches.length > 0) {\n      var touch = changedTouches[0];\n      return {\n        x: touch.clientX,\n        y: touch.clientY\n      };\n    }\n\n    if (ev.pageX !== undefined) {\n      return {\n        x: ev.pageX,\n        y: ev.pageY\n      };\n    }\n  }\n\n  return {\n    x: 0,\n    y: 0\n  };\n}\n/**\n * @hidden\n * Given a side, return if it should be on the end\n * based on the value of dir\n * @param side the side\n * @param isRTL whether the application dir is rtl\n */\n\n\nfunction isEndSide(side) {\n  var isRTL = document.dir === 'rtl';\n\n  switch (side) {\n    case 'start':\n      return isRTL;\n\n    case 'end':\n      return !isRTL;\n\n    default:\n      throw new Error(\"\\\"\" + side + \"\\\" is not a valid value for [side]. Use \\\"start\\\" or \\\"end\\\" instead.\");\n  }\n}\n\nfunction debounceEvent(event, wait) {\n  var original = event._original || event;\n  return {\n    _original: event,\n    emit: debounce(original.emit.bind(original), wait)\n  };\n}\n\nfunction debounce(func, wait) {\n  if (wait === void 0) {\n    wait = 0;\n  }\n\n  var timer;\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    clearTimeout(timer);\n    timer = setTimeout.apply(void 0, [func, wait].concat(args));\n  };\n}\n\nexport { rIC as a, assert as b, clamp as c, debounceEvent as d, debounce as e, findItemLabel as f, hasShadowDom as h, isEndSide as i, now as n, pointerCoord as p, renderHiddenInput as r };"],"sourceRoot":""}