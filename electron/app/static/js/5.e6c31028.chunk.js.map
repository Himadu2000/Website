{"version":3,"sources":["../node_modules/@ionic/core/dist/esm/legacy/focus-visible-2e541376.js"],"names":["__webpack_require__","r","__webpack_exports__","d","startFocusVisible","ION_FOCUSED","ION_FOCUSABLE","FOCUS_KEYS","doc","document","currentFocus","keyboardMode","setFocus","elements","forEach","el","classList","remove","add","addEventListener","ev","includes","key","pointerDown","composedPath","filter","contains","activeElement","body"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,sCAAAE,IAAA,IAAAC,EAAA,cACAC,EAAA,gBACAC,EAAA,4FAEA,SAAAH,IACA,IAAAI,EAAAC,SACAC,EAAA,GACAC,GAAA,EAEA,SAAAC,EAAAC,GACAH,EAAAI,QAAA,SAAAC,GACA,OAAAA,EAAAC,UAAAC,OAAAZ,KAEAQ,EAAAC,QAAA,SAAAC,GACA,OAAAA,EAAAC,UAAAE,IAAAb,KAEAK,EAAAG,EAGAL,EAAAW,iBAAA,mBAAAC,IACAT,EAAAJ,EAAAc,SAAAD,EAAAE,OAGAV,EAAA,MAIA,IAAAW,EAAA,WACAZ,GAAA,EACAC,EAAA,KAGAJ,EAAAW,iBAAA,mBAAAC,GACAT,GAAAS,EAAAI,cAQAZ,EAPAQ,EAAAI,eAAAC,OAAA,SAAAV,GACA,QAAAA,EAAAC,WACAD,EAAAC,UAAAU,SAAApB,QAQAE,EAAAW,iBAAA,sBACAX,EAAAmB,gBAAAnB,EAAAoB,MACAhB,EAAA,MAGAJ,EAAAW,iBAAA,aAAAI,GACAf,EAAAW,iBAAA,YAAAI","file":"static/js/5.e6c31028.chunk.js","sourcesContent":["var ION_FOCUSED = 'ion-focused';\nvar ION_FOCUSABLE = 'ion-focusable';\nvar FOCUS_KEYS = ['Tab', 'ArrowDown', 'Space', 'Escape', ' ', 'Shift', 'Enter', 'ArrowLeft', 'ArrowRight', 'ArrowUp'];\n\nfunction startFocusVisible() {\n  var doc = document;\n  var currentFocus = [];\n  var keyboardMode = true;\n\n  function setFocus(elements) {\n    currentFocus.forEach(function (el) {\n      return el.classList.remove(ION_FOCUSED);\n    });\n    elements.forEach(function (el) {\n      return el.classList.add(ION_FOCUSED);\n    });\n    currentFocus = elements;\n  }\n\n  doc.addEventListener('keydown', function (ev) {\n    keyboardMode = FOCUS_KEYS.includes(ev.key);\n\n    if (!keyboardMode) {\n      setFocus([]);\n    }\n  });\n\n  var pointerDown = function pointerDown() {\n    keyboardMode = false;\n    setFocus([]);\n  };\n\n  doc.addEventListener('focusin', function (ev) {\n    if (keyboardMode && ev.composedPath) {\n      var toFocus = ev.composedPath().filter(function (el) {\n        if (el.classList) {\n          return el.classList.contains(ION_FOCUSABLE);\n        }\n\n        return false;\n      });\n      setFocus(toFocus);\n    }\n  });\n  doc.addEventListener('focusout', function () {\n    if (doc.activeElement === doc.body) {\n      setFocus([]);\n    }\n  });\n  doc.addEventListener('touchstart', pointerDown);\n  doc.addEventListener('mousedown', pointerDown);\n}\n\nexport { startFocusVisible };"],"sourceRoot":""}