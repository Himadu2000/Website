{"version":3,"sources":["../node_modules/@ionic/core/dist/esm/legacy/ion-toggle-md.entry.js","../node_modules/@ionic/core/dist/esm/legacy/chunk-9d21e8e5.js","../node_modules/@ionic/core/dist/esm/legacy/chunk-d102c9d1.js","../node_modules/@ionic/core/dist/esm/legacy/chunk-6c3d2f60.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Toggle","tslib__WEBPACK_IMPORTED_MODULE_0__","_chunk_f257aad1_js__WEBPACK_IMPORTED_MODULE_1__","_chunk_9d21e8e5_js__WEBPACK_IMPORTED_MODULE_3__","_chunk_6c3d2f60_js__WEBPACK_IMPORTED_MODULE_4__","_chunk_d102c9d1_js__WEBPACK_IMPORTED_MODULE_5__","hostRef","_this","this","Object","inputId","toggleIds","lastDrag","activated","name","checked","disabled","value","onClick","Date","now","onFocus","ionFocus","emit","onBlur","ionBlur","ionChange","ionStyle","prototype","checkedChanged","isChecked","disabledChanged","emitStyle","gesture","setDisabled","componentWillLoad","componentDidLoad","_a","_b","label","e","then","bind","sent","createGesture","el","gestureName","gesturePriority","threshold","passive","onStart","onMove","ev","onEnd","componentDidUnload","destroy","undefined","interactive-disabled","setFocus","detail","doc","deltaX","margin","isRTL","dir","shouldToggle","document","event","preventDefault","stopImmediatePropagation","getValue","buttonEl","focus","render","color","mode","labelId","id","role","aria-disabled","aria-checked","aria-labelledby","class","assign","type","ref","btnEl","defineProperty","get","enumerable","configurable","createColorClasses","getClassMap","hostContext","openURL","selector","closest","length","ion-color","classes","map","Array","isArray","split","filter","c","trim","getClassList","forEach","SCHEME","url","direction","router","test","querySelector","componentOnReady","push","rIC","callback","window","requestIdleCallback","setTimeout","hasShadowDom","shadowRoot","attachShadow","findItemLabel","componentEl","itemEl","renderHiddenInput","always","container","input","ownerDocument","createElement","classList","add","appendChild","clamp","min","n","max","Math","assert","actual","reason","message","console","error","Error","timeStamp","pointerCoord","changedTouches","touch","x","clientX","y","clientY","pageX","pageY","isEndSide","side","debounceEvent","wait","original","_original","debounce","func","timer","args","_i","arguments","clearTimeout","apply","concat","hapticSelection","engine","TapticEngine","selection","hapticSelectionStart","gestureSelectionStart","hapticSelectionChanged","gestureSelectionChanged","hapticSelectionEnd","gestureSelectionEnd"],"mappings":"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","file":"static/js/74.2057b7e4.chunk.js","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { r as registerInstance, c as createEvent, d as getIonMode, h, H as Host, e as getElement } from './chunk-f257aad1.js';\nimport './chunk-1074393c.js';\nimport { c as createColorClasses, h as hostContext } from './chunk-9d21e8e5.js';\nimport { h as hapticSelection } from './chunk-6c3d2f60.js';\nimport { f as findItemLabel, r as renderHiddenInput } from './chunk-d102c9d1.js';\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\n\nvar Toggle =\n/** @class */\nfunction () {\n  function Toggle(hostRef) {\n    var _this = this;\n\n    registerInstance(this, hostRef);\n    this.inputId = \"ion-tg-\" + toggleIds++;\n    this.lastDrag = 0;\n    this.activated = false;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n\n    this.name = this.inputId;\n    /**\n     * If `true`, the toggle is selected.\n     */\n\n    this.checked = false;\n    /**\n     * If `true`, the user cannot interact with the toggle.\n     */\n\n    this.disabled = false;\n    /**\n     * The value of the toggle does not mean if it's checked or not, use the `checked`\n     * property for that.\n     *\n     * The value of a toggle is analogous to the value of a `<input type=\"checkbox\">`,\n     * it's only used when the toggle participates in a native `<form>`.\n     */\n\n    this.value = 'on';\n\n    this.onClick = function () {\n      if (_this.lastDrag + 300 < Date.now()) {\n        _this.checked = !_this.checked;\n      }\n    };\n\n    this.onFocus = function () {\n      _this.ionFocus.emit();\n    };\n\n    this.onBlur = function () {\n      _this.ionBlur.emit();\n    };\n\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n  }\n\n  Toggle.prototype.checkedChanged = function (isChecked) {\n    this.ionChange.emit({\n      checked: isChecked,\n      value: this.value\n    });\n  };\n\n  Toggle.prototype.disabledChanged = function () {\n    this.emitStyle();\n\n    if (this.gesture) {\n      this.gesture.setDisabled(this.disabled);\n    }\n  };\n\n  Toggle.prototype.componentWillLoad = function () {\n    this.emitStyle();\n  };\n\n  Toggle.prototype.componentDidLoad = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var _a;\n\n      var _this = this;\n\n      return tslib_1.__generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = this;\n            return [4\n            /*yield*/\n            , import('./index-0303391f.js')];\n\n          case 1:\n            _a.gesture = _b.sent().createGesture({\n              el: this.el,\n              gestureName: 'toggle',\n              gesturePriority: 100,\n              threshold: 5,\n              passive: false,\n              onStart: function onStart() {\n                return _this.onStart();\n              },\n              onMove: function onMove(ev) {\n                return _this.onMove(ev);\n              },\n              onEnd: function onEnd(ev) {\n                return _this.onEnd(ev);\n              }\n            });\n            this.disabledChanged();\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  Toggle.prototype.componentDidUnload = function () {\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n  };\n\n  Toggle.prototype.emitStyle = function () {\n    this.ionStyle.emit({\n      'interactive-disabled': this.disabled\n    });\n  };\n\n  Toggle.prototype.onStart = function () {\n    this.activated = true; // touch-action does not work in iOS\n\n    this.setFocus();\n  };\n\n  Toggle.prototype.onMove = function (detail) {\n    if (shouldToggle(document, this.checked, detail.deltaX, -10)) {\n      this.checked = !this.checked;\n      hapticSelection();\n    }\n  };\n\n  Toggle.prototype.onEnd = function (ev) {\n    this.activated = false;\n    this.lastDrag = Date.now();\n    ev.event.preventDefault();\n    ev.event.stopImmediatePropagation();\n  };\n\n  Toggle.prototype.getValue = function () {\n    return this.value || '';\n  };\n\n  Toggle.prototype.setFocus = function () {\n    if (this.buttonEl) {\n      this.buttonEl.focus();\n    }\n  };\n\n  Toggle.prototype.render = function () {\n    var _a;\n\n    var _this = this;\n\n    var _b = this,\n        inputId = _b.inputId,\n        disabled = _b.disabled,\n        checked = _b.checked,\n        activated = _b.activated,\n        color = _b.color,\n        el = _b.el;\n\n    var mode = getIonMode(this);\n    var labelId = inputId + '-lbl';\n    var label = findItemLabel(el);\n    var value = this.getValue();\n\n    if (label) {\n      label.id = labelId;\n    }\n\n    renderHiddenInput(true, el, this.name, checked ? value : '', disabled);\n    return h(Host, {\n      onClick: this.onClick,\n      role: \"checkbox\",\n      \"aria-disabled\": disabled ? 'true' : null,\n      \"aria-checked\": \"\" + checked,\n      \"aria-labelledby\": labelId,\n      class: Object.assign({}, createColorClasses(color), (_a = {}, _a[mode] = true, _a['in-item'] = hostContext('ion-item', el), _a['toggle-activated'] = activated, _a['toggle-checked'] = checked, _a['toggle-disabled'] = disabled, _a['interactive'] = true, _a))\n    }, h(\"div\", {\n      class: \"toggle-icon\"\n    }, h(\"div\", {\n      class: \"toggle-inner\"\n    })), h(\"button\", {\n      type: \"button\",\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      disabled: disabled,\n      ref: function ref(btnEl) {\n        return _this.buttonEl = btnEl;\n      }\n    }));\n  };\n\n  Object.defineProperty(Toggle.prototype, \"el\", {\n    get: function get() {\n      return getElement(this);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Toggle, \"watchers\", {\n    get: function get() {\n      return {\n        \"checked\": [\"checkedChanged\"],\n        \"disabled\": [\"disabledChanged\"]\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Toggle, \"style\", {\n    get: function get() {\n      return \":host{-webkit-box-sizing:content-box!important;box-sizing:content-box!important;display:inline-block;outline:none;contain:content;cursor:pointer;-ms-touch-action:none;touch-action:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-focused) input{border:2px solid #5e9ed6}:host(.toggle-disabled){pointer-events:none}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}:host-context([dir=rtl]) button,[dir=rtl] button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}:host{--background:var(--ion-color-medium-tint,#a2a4ab);--background-checked:rgba(var(--ion-color-primary-rgb,56,128,255),0.5);--handle-background:var(--ion-background-color,#fff);--handle-background-checked:var(--ion-color-primary,#3880ff);padding-left:12px;padding-right:12px;padding-top:12px;padding-bottom:12px;-webkit-box-sizing:content-box;box-sizing:content-box;position:relative;width:36px;height:14px;contain:strict}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}:host(.ion-color.toggle-checked) .toggle-icon{background:rgba(var(--ion-color-base-rgb),.5)}:host(.ion-color.toggle-checked) .toggle-inner{background:var(--ion-color-base)}.toggle-icon{border-radius:14px;display:block;position:relative;width:100%;height:100%;-webkit-transition:background-color .16s;transition:background-color .16s;background:var(--background);pointer-events:none}.toggle-inner{left:0;top:-3px;border-radius:50%;position:absolute;width:20px;height:20px;-webkit-transition-duration:.16s;transition-duration:.16s;-webkit-transition-property:background-color,-webkit-transform;transition-property:background-color,-webkit-transform;transition-property:transform,background-color;transition-property:transform,background-color,-webkit-transform;-webkit-transition-timing-function:cubic-bezier(.4,0,.2,1);transition-timing-function:cubic-bezier(.4,0,.2,1);background:var(--handle-background);-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,.14),0 3px 1px -2px rgba(0,0,0,.2),0 1px 5px 0 rgba(0,0,0,.12);box-shadow:0 2px 2px 0 rgba(0,0,0,.14),0 3px 1px -2px rgba(0,0,0,.2),0 1px 5px 0 rgba(0,0,0,.12);will-change:transform,background-color;contain:strict}:host-context([dir=rtl]) .toggle-inner,[dir=rtl] .toggle-inner{left:unset;right:unset;right:0}:host(.toggle-checked) .toggle-icon{background:var(--background-checked)}:host(.toggle-checked) .toggle-inner{-webkit-transform:translate3d(16px,0,0);transform:translate3d(16px,0,0);background:var(--handle-background-checked)}:host-context([dir=rtl]).toggle-checked .toggle-inner,:host-context([dir=rtl]):host(.toggle-checked) .toggle-inner{-webkit-transform:translate3d(calc(-1 * 16px),0,0);transform:translate3d(calc(-1 * 16px),0,0)}:host(.toggle-disabled){opacity:.3}:host(.in-item[slot]){margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:16px;padding-right:0;padding-top:12px;padding-bottom:12px;cursor:pointer}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.in-item[slot]){padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:0;padding-inline-end:0}}:host(.in-item[slot=start]){padding-left:2px;padding-right:18px;padding-top:12px;padding-bottom:12px}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.in-item[slot=start]){padding-left:unset;padding-right:unset;-webkit-padding-start:2px;padding-inline-start:2px;-webkit-padding-end:18px;padding-inline-end:18px}}\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Toggle;\n}();\n\nfunction shouldToggle(doc, checked, deltaX, margin) {\n  var isRTL = doc.dir === 'rtl';\n\n  if (checked) {\n    return !isRTL && margin > deltaX || isRTL && -margin < deltaX;\n  } else {\n    return !isRTL && -margin < deltaX || isRTL && margin > deltaX;\n  }\n}\n\nvar toggleIds = 0;\nexport { Toggle as ion_toggle };","import * as tslib_1 from \"tslib\";\n\nfunction hostContext(selector, el) {\n  return el.closest(selector) !== null;\n}\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\n\n\nfunction createColorClasses(color) {\n  var _a;\n\n  return typeof color === 'string' && color.length > 0 ? (_a = {\n    'ion-color': true\n  }, _a[\"ion-color-\" + color] = true, _a) : undefined;\n}\n\nfunction getClassList(classes) {\n  if (classes !== undefined) {\n    var array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array.filter(function (c) {\n      return c != null;\n    }).map(function (c) {\n      return c.trim();\n    }).filter(function (c) {\n      return c !== '';\n    });\n  }\n\n  return [];\n}\n\nfunction getClassMap(classes) {\n  var map = {};\n  getClassList(classes).forEach(function (c) {\n    return map[c] = true;\n  });\n  return map;\n}\n\nvar SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\n\nfunction openURL(url, ev, direction) {\n  return tslib_1.__awaiter(this, void 0, void 0, function () {\n    var router;\n    return tslib_1.__generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!(url != null && url[0] !== '#' && !SCHEME.test(url))) return [3\n          /*break*/\n          , 2];\n          router = document.querySelector('ion-router');\n          if (!router) return [3\n          /*break*/\n          , 2];\n\n          if (ev != null) {\n            ev.preventDefault();\n          }\n\n          return [4\n          /*yield*/\n          , router.componentOnReady()];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , router.push(url, direction)];\n\n        case 2:\n          return [2\n          /*return*/\n          , false];\n      }\n    });\n  });\n}\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };","function rIC(callback) {\n  if ('requestIdleCallback' in window) {\n    window.requestIdleCallback(callback);\n  } else {\n    setTimeout(callback, 32);\n  }\n}\n\nfunction hasShadowDom(el) {\n  return !!el.shadowRoot && !!el.attachShadow;\n}\n\nfunction findItemLabel(componentEl) {\n  var itemEl = componentEl.closest('ion-item');\n\n  if (itemEl) {\n    return itemEl.querySelector('ion-label');\n  }\n\n  return null;\n}\n\nfunction renderHiddenInput(always, container, name, value, disabled) {\n  if (always || hasShadowDom(container)) {\n    var input = container.querySelector('input.aux-input');\n\n    if (!input) {\n      input = container.ownerDocument.createElement('input');\n      input.type = 'hidden';\n      input.classList.add('aux-input');\n      container.appendChild(input);\n    }\n\n    input.disabled = disabled;\n    input.name = name;\n    input.value = value || '';\n  }\n}\n\nfunction clamp(min, n, max) {\n  return Math.max(min, Math.min(n, max));\n}\n\nfunction assert(actual, reason) {\n  if (!actual) {\n    var message = 'ASSERT: ' + reason;\n    console.error(message);\n    debugger; // tslint:disable-line\n\n    throw new Error(message);\n  }\n}\n\nfunction now(ev) {\n  return ev.timeStamp || Date.now();\n}\n\nfunction pointerCoord(ev) {\n  // get X coordinates for either a mouse click\n  // or a touch depending on the given event\n  if (ev) {\n    var changedTouches = ev.changedTouches;\n\n    if (changedTouches && changedTouches.length > 0) {\n      var touch = changedTouches[0];\n      return {\n        x: touch.clientX,\n        y: touch.clientY\n      };\n    }\n\n    if (ev.pageX !== undefined) {\n      return {\n        x: ev.pageX,\n        y: ev.pageY\n      };\n    }\n  }\n\n  return {\n    x: 0,\n    y: 0\n  };\n}\n/**\n * @hidden\n * Given a side, return if it should be on the end\n * based on the value of dir\n * @param side the side\n * @param isRTL whether the application dir is rtl\n */\n\n\nfunction isEndSide(side) {\n  var isRTL = document.dir === 'rtl';\n\n  switch (side) {\n    case 'start':\n      return isRTL;\n\n    case 'end':\n      return !isRTL;\n\n    default:\n      throw new Error(\"\\\"\" + side + \"\\\" is not a valid value for [side]. Use \\\"start\\\" or \\\"end\\\" instead.\");\n  }\n}\n\nfunction debounceEvent(event, wait) {\n  var original = event._original || event;\n  return {\n    _original: event,\n    emit: debounce(original.emit.bind(original), wait)\n  };\n}\n\nfunction debounce(func, wait) {\n  if (wait === void 0) {\n    wait = 0;\n  }\n\n  var timer;\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    clearTimeout(timer);\n    timer = setTimeout.apply(void 0, [func, wait].concat(args));\n  };\n}\n\nexport { rIC as a, assert as b, clamp as c, debounceEvent as d, debounce as e, findItemLabel as f, hasShadowDom as h, isEndSide as i, now as n, pointerCoord as p, renderHiddenInput as r };","/**\n * Check to see if the Haptic Plugin is available\n * @return Returns `true` or false if the plugin is available\n */\n\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nfunction hapticSelection() {\n  var engine = window.TapticEngine;\n\n  if (engine) {\n    engine.selection();\n  }\n}\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\n\n\nfunction hapticSelectionStart() {\n  var engine = window.TapticEngine;\n\n  if (engine) {\n    engine.gestureSelectionStart();\n  }\n}\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\n\n\nfunction hapticSelectionChanged() {\n  var engine = window.TapticEngine;\n\n  if (engine) {\n    engine.gestureSelectionChanged();\n  }\n}\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\n\n\nfunction hapticSelectionEnd() {\n  var engine = window.TapticEngine;\n\n  if (engine) {\n    engine.gestureSelectionEnd();\n  }\n}\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelectionEnd as c, hapticSelection as h };"],"sourceRoot":""}